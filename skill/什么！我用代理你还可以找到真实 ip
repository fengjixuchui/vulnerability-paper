> 本文由 [简悦 SimpRead](http://ksria.com/simpread/) 转码， 原文地址 [mp.weixin.qq.com](https://mp.weixin.qq.com/s?__biz=Mzg5OTQzNTI4Nw==&mid=2247487502&idx=1&sn=a57a6e718673bc6712345b0f96aa2326&scene=21#wechat_redirect)

```
https://www.hackjie.com/tracking
```

以为挂 ××× 或者代理就安全了吗？

**0x01 测试**

首先开启 V2 代理 (科学上网) 通过 ip138 查看下请求的 ip，可以看出请求的 ip 地址为：中国香港

![](https://mmbiz.qpic.cn/mmbiz_png/fBibtyKXfkhGtsZpTLqnm8hTH6gic6ptlgeVGc9Y4Od5rTKqAykicCxkTDLxR2Gc2PXeEn5kUS5PNfRRXQngpZW5w/640?wx_fmt=png)

打开实例测试地址：

```
<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  </head>
  <body>
    <script>
      
      // turn 配置
      const config = {
        iceServers: [{
          // urls: "stun:stun.l.google.com:19302" // 这里使用谷歌，线上部署直接替换
        }]
      };
 
      // 构建
      let pc = new RTCPeerConnection(config);
      
      pc.onicecandidate = function(event) {
        if(event.candidate)
            handleCandidate(event.candidate.candidate);
      }
      
       function handleCandidate(candidate) { 
         if (candidate.indexOf("srflx") != -1) {
           console.log(candidate)
           var regex = /([0-9]{1,3}(\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/
           var ip_addr = regex.exec(candidate)[0];
           alert("Your public network ip: "+ ip_addr)
         }  
       }
       
      pc.createDataChannel("");
      
      pc.createOffer(function(result){
          pc.setLocalDescription(result);
      }, function(){});
</script>
```

我们通过下图可以看到，代理 / 客户端请求的 ip 为 42 开头的代理 ip，**下方匿名真实 ip 追踪地址为：39 开头**，且 39 开头地址为用户的**真实 Ip 地址**  

![](https://mmbiz.qpic.cn/mmbiz_png/fBibtyKXfkhGtsZpTLqnm8hTH6gic6ptlgs5kJbialjDg7hqPyUicXia6c1bsOibPEHcGtf5OWp9JjiayN7q0nGgLWkUQ/640?wx_fmt=png)

**0x02 原理**

主要还是通过：**通过 WEBRTC 结合 sutn 服务器实现获取真实主机 IP**

WebRTC: Web Real Time Communication 是一系列为提供端到端实时通信连接的协议和 API。Google 于 2011 年发布了基于浏览器的 WebRTC 项目，且这个技术可以使很多不同的应用，如视频会议、文件传输、聊天和桌面共享等都不需要额外的插件。

WebRTC 是完全开源免费的，其使用 RTP 协议来传输音视频，并支持 Chrome、Mozilla、Opera、Microsoft Edge、安卓浏览器等浏览器。

首先 WebRTC 是完全开源免费的，其次是由于对于用户所需要的只是一个支持的浏览器。

  
WebRTC 信令

### 什么是信令

*   信令是配置、控制、以及结束用户间通信会话的过程。
    
*   端到端通信需要信令来建立。
    
*   两端想要通信，主要需要三个信令步骤：
    

*   分享会话控制信息；
    
*   交换 IP 地址和端口等网络信息；
    
*   交换用户的编解码器以及媒体格式。
    

### 为什么通信需要信令

*   会话控制信息会控制端到端连接的所有建连、断连、以及发送信息。
    
*   IP 以及端口信息用于找到用户网络层位置。
    
*   编解码器以及多媒体格式用于确定用户间建立的分辨率以及多媒体设置。
    
*   这些所有的设置都根据 SDP 协议（Session Description Protocal）来进行交换。
    
      
    

STUN（Simple Traversal of UDP over NATs，NAT 的 UDP 简单穿越）是一种网络协议，它允许位于 NAT（或多重 NAT）后的客户端找出自己的公网地址，查出自己位于哪种类型的 NAT 之后以及 NAT 为某一 个本地端口所绑定的 Internet 端端口。这些信息被用来在两个同时处于 NAT 路由器之后的主机之间建立 UDP 通信。该协议由 RFC 3489 定义。

        Firefox 跟 Chrome 支持 WebRTC 可以向 STUN 服务器请求，返回内外网 IP，不同于 XMLHttpRequest 请求，STUN 请求开发者工具当中看不到网络请求的 Firefox 跟 Chrome 支持 WebRTC 可以向 STUN 服务器请求，返回内外网 IP，不同于 XMLHttpRequest 请求，STUN 请求开发者工具当中看不到网络请求的！

**0x03 js 测试代码**

感谢持续关注黑客街，将会有详细源码公布

```
<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  </head>
  <body>
    <script>
      // turn 配置
      const config = {
        iceServers: [{
          // urls: "stun:stun.l.google.com:19302" // 这里使用谷歌，线上部署直接替换
        }]
      };
      // 构建
      let pc = new RTCPeerConnection(config);
      pc.onicecandidate = function(event) {
        if(event.candidate)
            handleCandidate(event.candidate.candidate);
      }
       function handleCandidate(candidate) { 
         if (candidate.indexOf("srflx") != -1) {
           console.log(candidate)
           var regex = /([0-9]{1,3}(\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/
           var ip_addr = regex.exec(candidate)[0];
           alert("Your public network ip: "+ ip_addr)
         }  
       }
      pc.createDataChannel("");
      pc.createOffer(function(result){
          pc.setLocalDescription(result);
      }, function(){});
</script>
```

文章参考：

https://blog.csdn.net/qq_30359165/article/details/116022149

https://mp.weixin.qq.com/s/U2EQ90oIyrmmY2B2JshmJQ

https://www.yisu.com/zixun/56936.html

点击原文，进入实例测试页面

![](https://mmbiz.qpic.cn/mmbiz_jpg/fBibtyKXfkhHwN7vaIjzryOTkpKPklFeYiaiaKnpqQ9at3rO9AZ0m1xiaNgScnUGBo9AbgJ0ksKa7Ybib3UE8HTauoQ/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1)

**如果您觉得该文章有用，请记得点赞和转发哟。**

**您的阅读和转发** ******希望****都可以让身边的朋友**能够共同成长****

****谢谢大家关注黑客街安全团队****

**觉得不错点个 **“赞”**、“在看”，支持下小编****![](https://mmbiz.qpic.cn/mmbiz_png/3k9IT3oQhT1YhlAJOGvAaVRV0ZSSnX46ibouOHe05icukBYibdJOiaOpO06ic5eb0EMW1yhjMNRe1ibu5HuNibCcrGsqw/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1)**